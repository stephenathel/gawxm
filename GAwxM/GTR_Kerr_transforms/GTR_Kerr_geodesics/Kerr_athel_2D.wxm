/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.04.0 ] */

/* [wxMaxima: comment start ]
Kerr_athel_2D.wxm

GNU General Public License 2022  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
An application document for Geometric Algebra using wxMaxima

Ref: folder GTR_Kerr_transforms...
that shows how to find the lost metrics and

Ref: folder GTR_Kerr_geodesics...
the folder for this file and other files to plot both radial 
and glancing geodesics
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
set derivabbrev:false$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
tensor analysis for the metric R(1,1) gives radial geodesics
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ratprint;
if is(ratprint) then load(ctensor);
ratprint:false;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
init_ctensor()$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ct_coords:[r,t]$
dim:2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the covariant metric tensor
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
gs:+(1+2*m/r)$
gt:-(1-2*m/r)$
grt:2*m/r$
lg:matrix([gs,grt],[grt,gt]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
matrixp(lg);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the contravariant metric tensor
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ug:invert_by_lu(lg);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
matrixp(ug);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:true$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the Christoffel tensor of the second kind
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
rational simplification
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ratchristof:true$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the third index is the contravariant index
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
christof(false)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
arrays;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find geodesic expressions
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
cgeodesic(true)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
write the metric for non-zero mass for s equivalent to proper time, tau
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
metric:(1+2*m/r)*diff(r,s)^2+4*m/r*diff(r,s)*diff(t,s)-(1-2*m/r)*diff(t,s)^2+1=0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
simplify the geodesics using the metric
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
r^3*geod[1]=0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the amazing mixed frame Newtonian acceleration equation
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
expand(m*r*metric)+%;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(%,diff(r,s,2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the second order ODE for the proper time equation
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
r^3*geod[2]=0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(%,diff(t,s,2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
prepare for Runge-Kutta integration
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
subst(u,diff(t,s,1),%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst(v,diff(r,s,1),%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
we need the metric from above for initial values for the Runge-Kutta integration
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
metric:(1+2*m/r)*diff(r,s)^2+4*m/r*diff(r,s)*diff(t,s)-(1-2*m/r)*diff(t,s)^2+1=0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst(v,diff(r,s,1),%);
subst(u,diff(t,s,1),%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
later we will impose an initial value for v and then find the initial time 
dilation from the metric
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
positive values for u will mean that the proper time and the fast, universal time both
increase in the same sense i.e. that time has not reversed, so we would initialize 
in this sense anywhere outside the gravitational radius
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
solve(%,u);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
N.B. this may be allowed as long as we do not initialize at the gravitational radius
   [wxMaxima: comment end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
