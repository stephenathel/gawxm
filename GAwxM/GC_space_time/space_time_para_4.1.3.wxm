/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
space_time_para_4.1.3.wxm

Copyright (C) 2017  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A development document for Geometric Algebra with wxMaxima
to test the vector calculus functions within the GAwxM environment,
contains...
Initialization
Loading of functions (intrinsic and GA specific)
Pseudoscalar definition (specifies the space dimension) and
Calculation of the inverse pseudoscalar used to generate the dual of a multivector
Enumeration of the standard basis for the specified dimension

Ref: The Survey, para.4.1.3
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
investigate the use of the fourth axis, e4, as a possible imitation of G(1,3)
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
reset()$
kill(all)$
stardisp:true$
stringdisp:true$
noundisp:true$
simp:true$
dotdistrib:true$
derivabbrev:true$
lispdisp:true$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
load intrinsic (maxima or lisp) function files
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load("basic")$
load("facexp")$
load("functs")$
load("scifac")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
batchload GA specific (maxima) function files;
the initialization file, maxima-init.mac is in the /home directory 
and contains the variable, maxima_userdir, and this allows the paths
in file_search_maxima to be extended to point to the GA functions
ldisplay(maxima_userdir)$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
batchload("gafns0")$
batchload("gafns1")$
batchload("gafns2")$
batchload("gafns3")$
batchload("gafns4")$
batchload("gafns5")$
batchload("gafns6")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
batchload GC specific (maxima) function files;
the paths in file_search_maxima are also extended to point to the GC functions
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
batchload("gcfns1")$
batchload("gcfns2")$
batchload("gcfns3")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be e1~e2 i.e. Plen = 2
global parameters, Pseudos, Pvar[] and Plen, I and Ii
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:e1~e2~e3~e4$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar,Plen,I,Ii)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
global array parameters 
lstbases[], nbases[], maxnbases
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(lstbases,Plen)$
array(nbases,Plen)$
eset:setify(Pvar)$
for ng:1 thru Plen do
block(nbases[ng]:combination(Plen,ng),
lstbases[ng]:full_listify(powerset(eset,ng)))$
maxnbases:(combination(Plen,floor(Plen/2)))$
kill(eset,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
global arrays nbases[] and lstblds[] are used for grader(M) in gafns4.wxm
lstblds[] is an array of lists of blades and allblds[] is a list of all blades
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(lstblds,Plen)$
for ng:1 thru Plen do
block(lstb:lstbases[ng],
lstblds[ng]:makelist(list2blade(lst),lst,lstb))$
allblds:[]$
for ng:1 thru Plen do
block(allblds:append(allblds,lstblds[ng]))$
ldisplay(allblds)$
kill(lstb,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the inverse of the canonical basis as a global list, invblds[], like allblds
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
invblds:[]$
for k:1 thru Plen do
block(ni:k*(k-1)/2,
nk:(-1)^ni,
lst:nk*lstblds[k],
invblds:append(invblds,lst))$
ldisplay(invblds)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
set derivabbrev:false$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ratprint:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
The Survey, para.4.1.3
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
show the spacetime gammas required for the imitation of G(1,3)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
g1:%i*e1$
g2:%i*e2$
g3:%i*e3$
g4:e4$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
g1&.g1;
g2&.g2;
g3&.g3;
g4&.g4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the spacetime coordinate vector using the gammas
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x:x1*g1+x2*g2+x3*g3+t*g4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
choose a simple rotation angle for partial verification of the hyperbolic identity
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
alpha:%pi/3$
ahalf:alpha/2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the velocity magnitude as a fraction of the speed of light 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
tanh(alpha)$
vel:ev(%,numer);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
choose a simple (imaginary ugh!) unit vector, vhat for the unit velocity
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vhat:g2$
vhat&*vhat;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
show the rotation plane and the rotation bivector
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Plane:vhat&*g4$
B:Plane*ahalf$
ldisplay(Plane,B)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form a rotation exponential, with accuracy limited using mvexp( ,13)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
mvexp(B,13)$
ev(%,numer,expand);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
verify that the intrinsic hyperbolic functions are consistent with function mvexp()
while imitating G(1,3) with the intrinsic imaginary, %i
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
cosh(ahalf)+Plane*sinh(ahalf)$
trigsimp(%)$
Rv:ev(%,numer,expand);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
numerical comparison of spacetime vector rotation with the Lorentz transformation
e.g. for a simple velocity, vel*vhat (= vel*g1)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vel:0.8$
alpha:atanh(vel)$
ahalf:alpha/2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form the rotation bivector
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vhat:g1$
B:vhat&*g4*ahalf$
ev(%,numer,expand);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form the left and right exponential multipliers
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
mvexp(-B,13)$
lexp:ev(%,numer,expand);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
mvexp(+B,13)$
rexp:ev(%,numer,expand);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
apply the rotation to a spacetime coordinate vector "parallel" to the velocity
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x:x1*g1+t*g4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the rotated spacetime vector
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
xbar:lexp&*x&*rexp$
ev(%,numer,expand)$
collectterms(%,%i,e1,e4);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
compare the spacetime rotation result with the Lorentz transformation factors
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
L:1/sqrt(1-vel^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Lv:vel*1/sqrt(1-vel^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the Lorentz space and time 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x1bar:(-Lv*t+L*x1)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tbar:(+L*t-Lv*x1)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the Lorentz spacetime vector
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x1bar*g1+tbar*g4;
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
