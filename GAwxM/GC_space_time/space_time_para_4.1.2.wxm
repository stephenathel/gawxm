/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
space_time_para_4.1.2.wxm

GNU General Public License 2017  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A development document for Geometric Algebra with wxMaxima
to test the vector calculus functions within the GAwxM environment,
contains...
Initialization
Loading of functions (intrinsic and GA specific)
Pseudoscalar definition (specifies the space dimension) and
Calculation of the inverse pseudoscalar used to generate the dual of a multivector
Enumeration of the standard basis for the specified dimension

Ref: The Survey, para.4.1.2,
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
investigate the use of the fourth axis, g4 = e4 to imitate G(1,3)
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
reset()$
kill(all)$
stardisp:true$
stringdisp:true$
noundisp:true$
simp:true$
dotdistrib:true$
derivabbrev:true$
lispdisp:true$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
load intrinsic (maxima or lisp) function files
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load("basic")$
load("facexp")$
load("functs")$
load("scifac")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
batchload GA specific (maxima) function files;
the initialization file, maxima-init.mac is in the /home directory 
and contains the variable, maxima_userdir, and this allows the paths
in file_search_maxima to be extended to point to the GA functions
ldisplay(maxima_userdir)$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
batchload("gafns0")$
batchload("gafns1")$
batchload("gafns2")$
batchload("gafns3")$
batchload("gafns4")$
batchload("gafns5")$
batchload("gafns6")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
batchload GC specific (maxima) function files;
the paths in file_search_maxima are also extended to point to the GC functions
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
batchload("gcfns1")$
batchload("gcfns2")$
batchload("gcfns3")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be e1~e2 i.e. Plen = 2
global parameters, Pseudos, Pvar[] and Plen, I and Ii
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:e1~e2~e3~e4$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar,Plen,I,Ii)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
global array parameters 
lstbases[], nbases[], maxnbases
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(lstbases,Plen)$
array(nbases,Plen)$
eset:setify(Pvar)$
for ng:1 thru Plen do
block(nbases[ng]:combination(Plen,ng),
lstbases[ng]:full_listify(powerset(eset,ng)))$
maxnbases:(combination(Plen,floor(Plen/2)))$
kill(eset,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
global arrays nbases[] and lstblds[] are used for grader(M) in gafns4.wxm
lstblds[] is an array of lists of blades and allblds[] is a list of all blades
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(lstblds,Plen)$
for ng:1 thru Plen do
block(lstb:lstbases[ng],
lstblds[ng]:makelist(list2blade(lst),lst,lstb))$
allblds:[]$
for ng:1 thru Plen do
block(allblds:append(allblds,lstblds[ng]))$
ldisplay(allblds)$
kill(lstb,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the inverse of the canonical basis as a global list, invblds[], like allblds
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
invblds:[]$
for k:1 thru Plen do
block(ni:k*(k-1)/2,
nk:(-1)^ni,
lst:nk*lstblds[k],
invblds:append(invblds,lst))$
ldisplay(invblds)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
set derivabbrev:false$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
The Survey, ref. para 4.1.2
investigate the use of the fourth axis with g4 = e4
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
in order to imitate G(1,3) use these gammas
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
g1:%i*e1$
g2:%i*e2$
g3:%i*e3$
g4:e4$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
allocate the inner products to definite axes for G(1,3) using g4 as the time axis
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
g1&.g1;
g2&.g2;
g3&.g3;
g4&.g4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the spacetime coordinate vector using these gammas
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x:x1*g1+x2*g2+x3*g3+t*g4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
examine a spacetime split using g4 = e4
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x&^g4$
space:collectterms(%,%i);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
time:x&.g4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now specify some "sigma" bivectors (printed bold although they are bivectors)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
s1:g1&^g4;
s2:g2&^g4;
s3:g3&^g4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
b(old)x space using the sigmas
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x1*s1+x2*s2+x3*s3$
bx:collectterms(%,%i)$
is(equal(bx,space))$
ldisplay(%,bx)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
typical sigma products
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
s1&*s1;
s2&.s3;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
s1&*s3;
s3&*s1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
using the spacetime coordinate vector, x from above;
compute...to find the spacetime interval used in para.4.1.2;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x&*x;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
so the above coordinate vector, x could be used to imitate G(1,3) 
with g4 as the worldline tangent vector
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
show the associativity of g4 with g4&*g4 = 1, 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
g4&*g4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
x&*(g4&*g4)&*x;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
(x&*g4)&*(g4&*x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
x&*g4&*g4&*x;
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
