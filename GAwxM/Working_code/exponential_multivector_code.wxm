/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
exponential_multivector_code.wxm

Copyright (C) 2013  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A test document for Geometric Algebra with wxMaxima
contains...
Initialization
Loading of functions (intrinsic and GA specific)
Pseudoscalar definition (specifies the space dimension) and
calculation of the inverse pseudoscalar used to generate the dual of a multivector
Enumeration of the standard basis for the specified dimension

Test the code for function mvexp()
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
reset()$
kill(all)$
stardisp:true$
stringdisp:true$
noundisp:true$
simp:true$
dotdistrib:true$
derivabbrev:true$
lispdisp:true$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
load intrinsic (maxima or lisp) function files
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load("basic")$
load("facexp")$
load("functs")$
load("scifac")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
batchload GA specific (maxima) function files;
the initialization file, maxima-init.mac is in the /home directory 
and contains the variable, maxima_userdir, and this allows the paths
in file_search_maxima to be extended to point to the GA functions
ldisplay(maxima_userdir)$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
batchload("gafns0")$
batchload("gafns1")$
batchload("gafns2")$
batchload("gafns3")$
batchload("gafns4")$
batchload("gafns5")$
batchload("gafns6")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be e1~e2 i.e. Plen = 2;
global parameters, Pseudos, Pvar[] and Plen, I and Ii
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:e1~e2~e3$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar,Plen,I,Ii)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
global array parameters 
lstbases[], nbases[], maxnbases
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(lstbases,Plen)$
array(nbases,Plen)$
eset:setify(Pvar)$
for ng:1 thru Plen do
block(nbases[ng]:combination(Plen,ng),
lstbases[ng]:full_listify(powerset(eset,ng)))$
maxnbases:(combination(Plen,floor(Plen/2)))$
kill(eset,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
global arrays nbases[] and lstblds[] are used for grader(M) in gafns4.wxm
lstblds[] is an array of lists of blades and allblds[] is a list of all blades
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(lstblds,Plen)$
for ng:1 thru Plen do
block(lstb:lstbases[ng],
lstblds[ng]:makelist(list2blade(lst),lst,lstb))$
allblds:[]$
for ng:1 thru Plen do
block(allblds:append(allblds,lstblds[ng]))$
ldisplay(allblds)$
kill(lstb,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
exponential function...
the first input is any multivector M (including scalar, a)
the second input is a non-negative integer, the highest index 
in the exponential sum (e.g. n=3 for full grade algebraic multivectors or
n=7 for numerical bivectors gives an accuracy of 4 decimal places)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
mvexp_code(M,n):=block([Mp,sum,num],
local(Mp,sum,num),
if integerp(n) then block(
if n<0 then return(false)
elseif n=0 then return(1)
elseif n=1 then return(1+M)
else block(Mp:M,sum:1+M,num:2,
loop,Mp:Mp&*M,Mp:1/num*Mp,
sum:sum+Mp,sum:facsum(sum,allblds),
num:num+1,
if num=n+1 then return(sum),
go(loop)))
else return(false))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
shows that the input index is tested and that scalar, a, is handled
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
mvexp_code(a,0);
mvexp_code(a,1);
mvexp_code(a,-1);
mvexp_code(a,1.1);
mvexp_code(a,5);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
shows that base products are resolved before being used in mvexp_code()
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
B:b*e1~*e2;
mvexp_code(B,2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
C:c1*e1~^e2+c2*e2~^e3;
mvexp_code(C,3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the tests with mixed grade multivectors are also a strong test for geomp()
i.e. &* in mvexp_code()
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lstgA:[2,3]$
nameA:"A"$
makelistgrademv(nameA,lstgA)$
mvexp_code(A,0);
mvexp_code(A,1);
mvexp_code(A,2);
mvexp_code(A,3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
tests a few bivector angles
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bv:e1~e2*%pi/3$
mvexp_code(bv,7);
expand(ev(%,numer));
kill(bv)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
theta:%pi/4$
ibv:e2~e3$
mvexp_code(ibv*theta,7);
expand(ev(%,numer));
kill(ibv,theta)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
and finally test the function mvexp() in file, gafns6.wxm
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
theta:%pi/2$
ibv:e1~e3$
mvexp(ibv*theta,9);
expand(ev(%,numer));
kill(ibv,theta)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
create a long expression from a full grade multivector
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lstgA:[0,1,2,3]$
nameA:"A"$
makelistgrademv(nameA,lstgA)$
expA:mvexp(A,3)$
ldisplay(expA)$
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
