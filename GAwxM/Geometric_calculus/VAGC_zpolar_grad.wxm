/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
VAGC_zpolar_grad.wxm

GNU General Public License 2019  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A development document for Geometric Algebra using wxMaxima

VAGC page 72 for the gradient, divergence and (vector) curl in cylindrical coordinates
This file is an extension of the file named VAGC_polar_grad.wxm (page 70 for 2D only)
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ext:["wxm"]$
file_type_maxima:append(ext,file_type_maxima)$
batchload("initialize_fns")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be {e1,e2} i.e. Plen = 2
e.g. for four dimensions edit Pseudos:{e1,e2,e3}$ to Pseudos:{e1,e2,e3,e4}$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:{e1,e2,e3}$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
batchload("initialize_lsts")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
set derivabbrev:false$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Extending the results of Exercise 5.20 (page 70) to page 72
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
form the coordinate vector, x from the lists of coefficients in 3D
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
xstr:"x"$
xlst:lstvector(xstr)$
ldisplay(xlst)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
xv:makevector(xlst)$
ldisplay(xv)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
x1:r*cos(th)$
x2:r*sin(th)$
x3:z$
x:ev(xv)$
ldisplay(x)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
only wr and wz are unit vectors of wjbasis
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wr:diff(x,r)$
wth:diff(x,th)$
wz:diff(x,z)$
ldisplay(wr,wth,wz)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the reciprocal of the basis using the output of reciprocb()
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wjbasis:[wr,wth,wz]$
reciprocb(wjbasis)$
recipout:trigsimp(%)$
ldisplay(recipout)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the (scalar) norm of the denominator to be applied to the output of reciprocb()
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bld:list2vecouter(wjbasis)$
denext:extract(bld)$
normden:trigsimp(denext[2]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
only wkr and wkz are unit vectors of wkbasis
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
recipout[1]/normden$
wkr:ratsimp(%)$
wkth:recipout[2]/normden$
wkz:recipout[3]/normden$
ldisplay(wkr,wkth,wkz)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Extending the results of Exercise 5.20, part a), for scalar F only
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
gradF:'wkr*'diff(F,r)+'wkth*'diff(F,th)+'wkz*'diff(F,z)$
ldisplay(gradF)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
identify the unit base vectors
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
rhat:wr$
thetahat:ratsimp(wth/r)$
zhat:wz$
ldisplay(rhat,thetahat,zhat)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
inspection of the equation for gradF
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
is(equal(wkr,rhat));
is(equal(wkth,thetahat/r));
is(equal(wkz,zhat));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Extending the results of Exercise 5.20, part b) to page 72
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
find the lhs of part b) as grad(F) for scalar F = f(r,th,z)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
F:f(r,th,z)$
ev(gradF,diff)$
lhs:facsum(%,allblds);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the rhs of part b) with rhat = wr and thetahat = wth/r and zhat = wz
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
diff(f(r,th,z),r)*rhat+(1/r)*diff(f(r,th,z),th)*thetahat+diff(f(r,th,z),z)*zhat$
rhs:facsum(%,allblds);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
is(equal(lhs,rhs));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
&. and &^ will need special treatment...
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
F:fr(r,th,z)*rhat+fth(r,th,z)*thetahat+fz(r,th,z)*zhat$
dFr:diff(F,r)$
dFth:diff(F,th)$
dFz:diff(F,z);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
separating the inner and outer parts of Equation (5.18)
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Extending the results of Exercise 5.20, part c) to page 72
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wkr&.dFr+wkth&.dFth+wkz&.dFz$
expand(%)$
divF:trigsimp(%)$
ldisplay(divF)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
differentiation of a product and inspection of the rhs of the equation for divF
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
diff((r*fr(r,th)),r);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Extending the results of Exercise 5.20, part d) to page 72
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wkr&^dFr+wkth&^dFth+wkz&^dFz$
expand(%)$
trigsimp(%)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now find the (vector) curl as the dual of the multivector curl
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
%&*Ii$
vcurlF:facsum(%,allblds)$
ldisplay(vcurlF)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
compare the outer part of Equation (5.18) with the expression in terms of rhat,
thetahat and zhat on page 72
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
rhs:(1/r*diff(fz(r,th,z),th)-diff(fth(r,th,z),z))*rhat+
    (diff(fr(r,th,z),z)-diff(fz(r,th,z),r))*thetahat+
    (1/r)*(diff(r*fth(r,th,z),r)-diff(fr(r,th,z),th))*zhat$
is(equal(vcurlF,rhs));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
N.B. show that rhat^thetahat^zhat = e1~e2~e3
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
rhat&^thetahat&^zhat;
trigsimp(%);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
