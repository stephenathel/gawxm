/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
VAGC_grad_vector.wxm

GNU General Public License 2019  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A development document for Geometric Algebra using wxMaxima

Exercise 5.14, VAGC page 67 for the gradient of a vector function in 2D only
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ext:["wxm"]$
file_type_maxima:append(ext,file_type_maxima)$
batchload("initialize_fns")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be {e1,e2} i.e. Plen = 2
e.g. for four dimensions edit Pseudos:{e1,e2,e3}$ to Pseudos:{e1,e2,e3,e4}$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:{e1,e2}$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
batchload("initialize_lsts")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
set derivabbrev:false$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.14
VAGC page 67
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
form the coordinate vector, x from the lists of coefficients in 2D only!
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
xstr:"x"$
xlst:lstvector(xstr)$
ldisplay(xlst)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
x:makevector(xlst)$
ldisplay(x)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form the vector valued function
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f(x1,x2):=f1(x1,x2)*{e1}+f2(x1,x2)*{e2}$
fx:ev(f(x1,x2))$
ldisplay(fx)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.14, part a)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Fstr:"fx"$
divF:mvdiv(Fstr,xlst)$
ldisplay(divF)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
divf:ev(divF,diff)$
ldisplay(divf)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.14, part b)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Fstr:"fx"$
curlF:mvcurl(Fstr,xlst)$
ldisplay(curlF)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ev(curlF,diff)$
curlf:facsum(%,allblds)$
ldisplay(curlf)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
N.B. gradF = divF + curlF for vectors, so test the function mvgrad() once again
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Fstr:"fx"$
gradF:mvgrad(Fstr,xlst)$
ldisplay(gradF)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ev(gradF,diff)$
gradf:facsum(%,allblds)$
ldisplay(gradf)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
divf+curlf$
is(equal(gradf,%));
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
