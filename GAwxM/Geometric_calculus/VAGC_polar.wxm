/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
VAGC_polar.wxm

GNU General Public License 2016  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A development document for Geometric Algebra using wxMaxima

Exercise 5.17, VAGC page 69 for polar coordinates in 2D only
Exercise 5.18, VAGC page 69 for the reciprocal polar coordinates again in 2D
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ext:["wxm"]$
file_type_maxima:append(ext,file_type_maxima)$
batchload("initialize_fns")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be {e1,e2} i.e. Plen = 2
e.g. for four dimensions edit Pseudos:{e1,e2,e3}$ to Pseudos:{e1,e2,e3,e4}$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:{e1,e2}$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
batchload("initialize_lsts")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
set derivabbrev:false$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.17
VAGC page 69
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
form the coordinate vector, x from the lists of coefficients in 2D only!
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
xstr:"x"$
xlst:lstvector(xstr)$
ldisplay(xlst)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
xv:makevector(xlst)$
ldisplay(xv)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.17, part a)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x1:r*cos(th)$
x2:r*sin(th)$
x:ev(xv)$
ldisplay(x)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
use Equation (5.16) to find wjbasis
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wr:diff(x,r)$
wth:diff(x,th)$
ldisplay(wr,wth)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wjbasis:[wr,wth]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.17, part b) 
check that for the orthogonal basis, the inner product is zero
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wr&.wth$
is(equal(%,0));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.18
page 69
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
find the reciprocal of the basis with the usage of reciprocb() given in gafns5.wxm 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bld:list2vecouter(wjbasis)$
denext:extract(bld)$
normden:trigsimp(denext[2])$
wkbasis_numerators:reciprocb(wjbasis)$
wkr:wkbasis_numerators[1]/normden$
wkth:wkbasis_numerators[2]/normden$
ldisplay(wkr,wkth)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wkbasis:[wkr,wkth]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
if we do not divide by the denominator then this is what we get...
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wkbasis_numerators:reciprocb(wjbasis)$
ldisplay(wkbasis_numerators)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
check that the reciprocal basis is also orthogonal!
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wkbasis[1]&.wkbasis[2]$
is(equal(%,0));
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
