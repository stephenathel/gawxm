/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
LAGA_chapter07.03theorem7.7.wxm (LAGA examples)

GNU General Public License 2013  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A test document for Geometric Algebra with wxMaxima
contains...
Initialization
Loading of functions (intrinsic and GA specific)
Pseudoscalar definition (specifies the space dimension) and
calculation of the inverse pseudoscalar used to generate the dual of a multivector
Enumeration of the standard basis for the specified dimension

Reflect in the geometric algebra, G4
Theorem 7.7 is needed for the sections: Reflect Vectors and Reflect Blades
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Reference book...Linear and Geometric Algebra (LAGA)
by Alan Macdonald
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
reset()$
kill(all)$
stardisp:true$
stringdisp:true$
noundisp:true$
simp:true$
dotdistrib:true$
derivabbrev:true$
lispdisp:true$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
load intrinsic (maxima or lisp) function files
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load("basic")$
load("facexp")$
load("functs")$
load("scifac")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
batchload GA specific (maxima) function files;
the initialization file, maxima-init.mac is in the /home directory 
and contains the variable, maxima_userdir, and this allows the paths
in file_search_maxima to be extended to point to the GA functions
ldisplay(maxima_userdir)$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
batchload("gafns0")$
batchload("gafns1")$
batchload("gafns2")$
batchload("gafns3")$
batchload("gafns4")$
batchload("gafns5")$
batchload("gafns6")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be e1~e2 i.e. Plen = 2;
global parameters, Pseudos, Pvar[] and Plen, I and Ii
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:e1~e2~e3~e4$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar,Plen,I,Ii)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
global array parameters 
lstbases[], nbases[], maxnbases
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(lstbases,Plen)$
array(nbases,Plen)$
eset:setify(Pvar)$
for ng:1 thru Plen do
block(nbases[ng]:combination(Plen,ng),
lstbases[ng]:full_listify(powerset(eset,ng)))$
maxnbases:(combination(Plen,floor(Plen/2)))$
kill(eset,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
global arrays nbases[] and lstblds[] are used for grader(M) in gafns4.wxm
lstblds[] is an array of lists of blades and allblds[] is a list of all blades
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(lstblds,Plen)$
for ng:1 thru Plen do
block(lstb:lstbases[ng],
lstblds[ng]:makelist(list2blade(lst),lst,lstb))$
allblds:[]$
for ng:1 thru Plen do
block(allblds:append(allblds,lstblds[ng]))$
ldisplay(allblds)$
kill(lstb,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Theorem 7.7
page 128
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
form the vector, a in G4
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lstga:[1]$
namea:"a"$ 
makelistgrademv(namea,lstga)$
ldisplay(a)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
for j=3 in G4, form the j-blade, A
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
j:3$
lstgA:[j]$
nameA:"A"$ 
makelistgrademv(nameA,lstgA)$
ldisplay(A)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form the two geometric products
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
G1:facsum(a&*A,allblds)$
G2:facsum(A&*a,allblds)$
ldisplay(G1,G2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Eq.(7.13)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lhs:facsum(a&.A,allblds)$
1/2*(G1-(-1)^j*G2)$
rhs:facsum(%,allblds)$
is(equal(lhs,rhs))$
ldisplay(%,lhs)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Eq.(7.14)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lhs:facsum(a&^A,allblds)$
1/2*(G1+(-1)^j*G2)$
rhs:facsum(%,allblds)$
is(equal(lhs,rhs))$
ldisplay(%,lhs)$
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
