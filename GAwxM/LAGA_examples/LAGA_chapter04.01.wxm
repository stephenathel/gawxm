/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 12.04.0 ] */

/* [wxMaxima: comment start ]
LAGA_chapter04.01.wxm (LAGA examples)

GNU General Public License 2013  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A test document for Geometric Algebra with wxMaxima
contains...
Initialization
Loading of functions (intrinsic and GA specific)
Pseudoscalar definition (specifies the space dimension) and
calculation of the inverse pseudoscalar used to generate the dual of a multivector
Enumeration of the standard basis for the specified dimension

Coordinates and the inner product 
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Reference book...Linear and Geometric Algebra (LAGA)
by Alan Macdonald
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ext:["wxm"]$
file_type_maxima:append(ext,file_type_maxima)$
batchload("initialize_fns")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be {e1,e2} i.e. Plen = 2
e.g. for four dimensions edit Pseudos:{e1,e2,e3}$ to Pseudos:{e1,e2,e3,e4}$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:{e1,e2,e3}$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
batchload("initialize_lsts")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
LAGA examples
Chapter 4.1
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Exercise 4.1
page 52

use "vb" to represent the v vector (usually printed in bold)
let norm2vb be the square of the norm, then  
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vb:v1*{e1}+v2*{e2}+v3*{e3}$
norm2vb:vb&.vb$
ldisplay(norm2vb)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 4.3
page 52
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
sc:(2*{e1})&.(2*{e1}+2*sqrt(3)*{e2})$
ldisplay(sc)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Normalize
page 52

let normvb be the norm of vector v, then nvb is the normalized vector
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vb:v1*{e1}+v2*{e2}+v3*{e3}$
norm2vb:vb&.vb$
normvb:sqrt(norm2vb)$
nvb:1/normvb*vb$
ldisplay(normvb,nvb)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Theorem 4.2 (Projection formula)
page 52

project vector v onto vector u giving a scalar multiple of vector u
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ub:u1*{e1}+u2*{e2}+u3*{e3}$
vb:v1*{e1}+v2*{e2}+v3*{e3}$
norm2ub:ub&.ub$
prjub:1/norm2ub*(ub&.vb)*ub;
facprj:facsum(%,allblds);
factor(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Theorem 4.3
page 52

let the left and right sides of an equation have values lhs and rhs
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ub:u1*{e1}+u2*{e2}+u3*{e3}$
vb:v1*{e1}+v2*{e2}+v3*{e3}$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Theorem 4.3, I1
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lhs:(a*ub)&.vb$
rhs:a*(ub&.vb)$
is(equal(lhs,rhs))$
ldisplay(lhs,rhs,%)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Theorem 4.3, I2 (Figure 4.4)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wb:w1*{e1}+w2*{e2}+w3*{e3}$
lhs:(ub+vb)&.wb$
rhs:ub&.wb+vb&.wb$
is(equal(lhs,rhs))$
ldisplay(lhs,rhs,%)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Theorem 4.3, I3
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lhs:ub&.vb$
rhs:vb&.ub$
is(equal(lhs,rhs))$
ldisplay(lhs,rhs,%)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Theorem 4.3, I4
if vb is not equal to zero then at least one of v1, v2, v3 is not equal to zero
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
vb:v1*{e1}+v2*{e2}+v3*{e3}$
assume(notequal(v1,0))$
norm2vb:vb&.vb$
is(norm2vb > 0)$
ldisplay(norm2vb,%)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Theorem 4.6
page 54
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ub:u1*{e1}+u2*{e2}+u3*{e3}$
vb:v1*{e1}+v2*{e2}+v3*{e3}$
uinnerv:ub&.vb$
ldisplay(uinnerv)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 4.5
page 54
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
uinneru:ub&.ub$
ldisplay(uinneru)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 4.6
page 54
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ub:1*{e1}+2*{e2}+3*{e3}$
vb:4*{e1}+5*{e2}+6*{e3}$
csang:(ub&.vb)/(ub&.ub*vb&.vb)$
ang:acos(csang)$
ev(%,numer)$
ldisplay(csang,ang,%)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 4.7
page 54
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ub:4*{e1}+5*{e2}+6*{e3}$
vb:1*{e1}+2*{e2}+3*{e3}$
norm2ub:ub&.ub$
prjub:1/norm2ub*(ub&.vb)*ub$
factor(%)$
ldisplay(norm2ub,prjub,%)$
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
