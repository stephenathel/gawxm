/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.04.0 ] */

/* [wxMaxima: comment start ]
Kerr_metric_sph_cyldr.wxm

GNU General Public License 2021  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
An application document for Geometric Algebra using wxMaxima

The Kerr metric (using R(3,1)) taken from the paper...
Discovering the Kerr and Kerr–Schild metrics
Roy Patrick Kerr (2008);

The elements of the metric are read off from the separation formula, Equn 1.25 
using Equn 1.26 for ds0^2 (what Kerr has called the base metric);
Kerr originally split the line element into 'base' and 'mass' formulae;
We transform these two line elements separately for clarity and then 
sum the two matrices to give the Kerr metric in spherical-cylindrical 
coordinates; 
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
The ctensor package has been loaded within the GAwxM environment on the chance that the
Geometric Algebra may be used at a later stage, so the GA preamble may be ignored. We 
can jump straight to the starting comment ...Start of tensor analysis
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ext:["wxm"]$
file_type_maxima:append(ext,file_type_maxima)$
batchload("initialize_fns")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be {e1,e2} i.e. Plen = 2
e.g. for four dimensions edit Pseudos:{e1,e2,e3}$ to Pseudos:{e1,e2,e3,e4}$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:{e1,e2,e3,e4}$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
batchload("initialize_lsts")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
set derivabbrev:false$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ratprint:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Start of tensor analysis for a rotating black hole
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load(ctensor)$
init_ctensor()$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the line element is given by...
the base term (Equ 1.26) + the mass term (part of Equn 1.25)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
declare([theta,dth,dphi],[noun,real])$
declare([du,dt,dr,a,dz],[noun,real])$
declare([r,phi,z,t],[noun,real])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Equation 1.26 from R.P.Kerr (2008)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ds2:(r^2+a^2*cos(theta)^2)*(dth^2+(sin(theta)^2*dphi^2))-
(2*dr+du-a*sin(theta)^2*dphi)*(du+a*sin(theta)^2*dphi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ds2K:expand(ds2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the Kerr-Schild metric shows confocal ellipsoids with the z-axis as rotation axis;
the derivation from Kerr includes the transformations: r*cos(theta)=z and r+u=-t
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
here, for the first transformation, we just use (r+u=-t) dr+du=-dt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
equnK:ds2K$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
[du=-dt-dr]$
equnK1:subst(%,[equnK])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
extract the expression from the list output of the intrinsic function, subst()
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
equnK1:%[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
for the next transformation, we need to use cos(theta)*dr-r*sin(theta)*dth=dz for dth;
before we substitute for the circular functions themselves we include those from dth; 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
[dth=(dr*cos(theta)-dz)/(r*sin(theta))]$
subst(%,[equnK1])$
equnK2:%[1]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now we also substitute cos(theta)=z/r and since the sin(theta) occurs
as a square, there is no sign ambiguity due to the +ve sqrt() for the sine;
the cosine lies in the interval [+1,-1], and its sign is still present in 
the matrix elements g13 and g31 below as +ve and -ve values of z;
theta is measured from the spin axis (z-axis) in the range [0,pi];
the substitution shows that the spherical radius is retained in this 
transformation to what may be called spherical-cylindrical coordinates;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
[cos(theta)=z/r,sin(theta)=+sqrt(1-(z/r)^2)]$
subst(%,[equnK2])$
equnK3:%[1]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
extract the elements of the base metric tensor in spherical-cylindrical coordinates;
firstly, isolate numerator and denominator for the spacetime interval of the base metric;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
equnK4:facsum(%,[dr,dphi,dz,dt])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
denbase:denom(%)$
ldisplay(denbase)$
numbase:denbase*equnK4$
ldisplay(numbase)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
manually rewrite the numerator output above (copy, paste and separate terms vertically)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
-dphi^2*r^2*(r^2+a^2)*(z-r)^2*(z+r)^2
+2*a*dphi*dr*r^2*(z-r)^2*(z+r)^2
-dr^2*(a^2*z^4+r^6)
+2*dr*dz*r*z*(a^2*z^2+r^4)
-dz^2*r^2*(a^2*z^2+r^4)
-dt^2*r^4*(z-r)*(z+r)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
confirm that the rewrite gives the same expression for the numerator
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
is(equal(%,numbase));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
initialize the intrinsic relativity tensor functions in ctensor
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ct_coords:[r,phi,z,t];
dim;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the covariant base metric tensor as a matrix;
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
read off and name both the diagonal and off-diagonal elements from the numerator (check)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
g11:-(a^2*z^4+r^6)$
g22:-r^2*(r^2+a^2)*(z-r)^2*(z+r)^2$
g33:-r^2*(a^2*z^2+r^4)$
g44:-r^4*(z-r)*(z+r)$
g12:+2*a*r^2*(z-r)^2*(z+r)^2$
g21:+2*a*r^2*(z-r)^2*(z+r)^2$
g13:+2*r*z*(a^2*z^2+r^4)$
g31:+2*r*z*(a^2*z^2+r^4)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form a matrix from just the numerator
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lg:matrix([g11,g12,g13,0],[g21,g22,0,0],[g31,0,g33,0],[0,0,0,g44])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now include the denominator
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lg_base:lg/denbase;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
matrixp(lg_base);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
determinant(lg_base)$
g:factor(%)$
ldisplay(g)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
so the base metric is singular at the origin and along the spin axis, r = +/-z
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]

   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
prepare to find the line element due to the mass term;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
kill(ds2,lg,g)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Equation 1.25 (part) from R.P.Kerr (2008)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ds2:2*m*r*(du+a*sin(theta)^2*dphi)^2/(r^2+a^2*cos(theta)^2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
identify the angular coordinate difference within the mass term
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ds2K:facsum(%,dphi,du)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
here, to begin with, we just use (r+u=-t) dr+du=-dt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
equnK:ds2K$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
[du=-dt-dr]$
subst(%,[equnK])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
extract the expression from the output list of the subst() function;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
equnK1:%[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now we also substitute cos(theta)=z/r;
within the mass term, the angular coordinate difference, dth, does not 
occur, so we can proceed directly to substitute for the circular functions;
since the circular functions occur as squares there is no sign ambiguity
due to the +ve sqrt() for sin(theta);
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
[cos(theta)=z/r,sin(theta)=+sqrt(1-(z/r)^2)]$
equnK2:subst(%,[equnK1])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
extract the expression from the list output from subst() and find the denominator
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
%[1]$
K2:xthru(%)$
denK2:denom(K2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the numerator and identify dt^2 and dr^2
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
num(K2)$
numK2:expandwrt(%,dt,dr);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
reformat the numerator to help reading off the metric elements due to the mass term
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
+2*m*a^2*dphi^2*(r^2-z^2)^2
-4*m*a*dphi*dt*r^2*(r^2-z^2)
-4*m*a*dphi*dr*r^2*(r^2-z^2)
+2*m*dt^2*r^4
+4*m*dr*dt*r^4
+2*m*dr^2*r^4$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
confirm that the reformat gives the same expression for the numerator
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
is(equal(%,numK2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
re-initialize the intrinsic relativity tensor functions in ctensor
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ct_coords:[r,phi,z,t];
dim;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the partial metric tensor as a matrix; just the elements due to the mass term
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
read off and name both the diagonal and off-diagonal elements from numK2 (check)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
phioff:-4*m*a*r^2*(r^2-z^2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
g11:+2*m*r^4$
g22:+2*m*a^2*(r^2-z^2)^2$
g33:0$
g44:+2*m*r^4$
g24:phioff$
g42:phioff$
g21:phioff$
g12:phioff$
g14:+4*m*r^4$
g41:+4*m*r^4$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form the matrix at first with just the elements from the numerator
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lg:matrix([g11,g12,0,g14],[g21,g22,0,g24],[0,0,g33,0],[g41,g42,0,g44])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
lg_mass:lg/denK2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
matrixp(lg_mass);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
re-declare the spherical-cylindrical coordinates
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
init_ctensor()$
ct_coords:[r,phi,z,t];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
add the two symmetric matrices;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lg:lg_base + lg_mass;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
An inspection of the Kerr metric in spherical-cylindrical coordinates;
N.B. this is a first look at just the two main terms of the metric
for a=0 (zero rotation);
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
the value, "1+2m/r"  only occurs in the Schwarzschild metric after 
the binomial approximation to the singular quotient, (1-2m/r)^-1;
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
here, the dr^2 element is algebraic (no approximation); 
we have already applied the zero rotation constraint and only obtain
the Schwarzschild metric value in the plane z = 0; there is no coordinate
singularity due to this element at r = 2m;
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
however, and this may be new, there is a singularity at 
r = +/-z, all along the spin axis;
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
it is possible that what we call jets emanating from black holes
may be spin axes accretion regions, even, or perhaps mainly, as 
we approach zero rotation;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lgdr2:lg[1,1];
[a=0]$
subst(%,[lgdr2]);
%[1]$
expand(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the dt^2 element is also algebraic; it has the same coordinate zero
as the Schwarzschild metric;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lgdt2:lg[4,4];
[a=0]$
subst(%,[lgdt2]);
%[1]$
expand(%);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
