/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
blade_operator_syntax.wxm

GNU General Public License 2019  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A test document for Geometric Algebra with wxMaxima
contains...
Initialization
Loading of functions (intrinsic and GA specific)
Pseudoscalar definition (specifies the space dimension) and
calculation of the inverse pseudoscalar used to generate the dual of a multivector
Enumeration of the standard basis for the specified dimension

Examples of syntax and precedence of the infix blade operators
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
reset()$
kill(all)$
stardisp:true$
stringdisp:true$
noundisp:true$
simp:true$
dotdistrib:true$
derivabbrev:true$
lispdisp:true$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
load intrinsic (maxima or lisp) function files
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
load("basic")$
load("facexp")$
load("functs")$
load("scifac")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
batchload GA specific (maxima) function files;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ext:["wxm"]$
file_type_maxima:append(ext,file_type_maxima)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
batchload("gafns0")$
batchload("gafns1")$
batchload("gafns2")$
batchload("gafns3")$
batchload("gafns4")$
batchload("gafns5")$
batchload("gafns6")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
batchload GC specific (maxima) function files;
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
batchload("gcfns1")$
batchload("gcfns2")$
batchload("gcfns3")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be {e1,e2} i.e. Plen = 2
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:{e1,e2,e3}$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
initialize this list with the only list we have so far; Pvar
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lstbases:makelist(Pvar[n],n,1,Plen)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the integer array, nbases (n:0,...3) is used for grader(M) in gafns4.wxm;
in order to use the same indices for the lists, (n:1,...3) define it using function array()
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
array(nbases,Plen)$
eset:setify(Pvar)$
for ng:1 thru Plen do
block(nbases[ng]:combination(Plen,ng),
lstbases[ng]:full_listify(powerset(eset,ng)))$
maxnbases:(combination(Plen,floor(Plen/2)))$
nbases[0]:1$    /*an array index zero cannot be used to index any of the lists*/
ldisplay(lstbases)$
kill(eset,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
initialize this list again with Pvar
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lstblds:makelist(Pvar[n],n,1,Plen)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the list named lstblds is used for grader(M) in gafns4.wxm;
lstblds is an list of lists of blades and allblds is a list of all blades
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
for ng:1 thru Plen do
block(lstb:lstbases[ng],
lstblds[ng]:makelist(list2blade(lst),lst,lstb))$
allblds:[]$
for ng:1 thru Plen do
block(allblds:append(allblds,lstblds[ng]))$
ldisplay(lstblds)$
ldisplay(allblds)$
kill(lstb,ng)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
definition and precedence of the infix operators is found in gafns0.wxm so that document
should be opened and used as a reference when studying the values of the expressions below
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
the binary blade product operators and their functions are as taken from gafns0.wxm...
"~*"(A,B):=bladep(A,B);
"~^"(A,B):=bladepout(A,B);
"~."(A,B):=bladepinn(A,B);
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
the blade product operators all have a precedence less than the set, {,}, so that the base
vectors remain bound to each other as a bivector set in the evaluation of the expressions
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
{e1,e2}~*{e3};
{e1,e2}~^{e3};
{e1}~*{e2,e3};
{e1}~^{e2,e3};
{e1}~.{e1,e2};
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
blade geometric and outer product syntax and precedence using the scalars, a and b
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
the blade product operators have a higher precedence than scalar multiplication, so the
blade operators can handle two inputs of (scalar*vector)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
(a*{e1})~*(b*{e2});
(a*{e1})~^(b*{e2});
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
when there is equal precedence, the order of execution is left to right 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
a~*{e1}~*b~*{e2};
a~^{e1}~^b~^{e2};
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
however, invalid products will produce invalid expressions
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
a*{e1}~*b*{e2};
a*{e1}~^b*{e2};
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
blade inner product syntax and precedence using the scalar, a
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
{e1}~.{e1,e2};
a*{e1}~.{e1,e2};
{e1}~.a*{e1,e2};
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the blade power operators are rarely used; they have the same precedence 
as the blade product operators
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
{e1}@*3;
{e1}@*3~*{e2};
{e1,e2}@*3;
{e2}~*{e1}@*3;
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
