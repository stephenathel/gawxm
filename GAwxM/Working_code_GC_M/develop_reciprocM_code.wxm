/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
develop_reciprocM_code.wxm

GNU General Public License 2019  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A development document for Geometric Algebra using wxMaxima
contains...
Initialization with
Pseudoscalar definition (specifies the space dimension)

in order to progress in forming a function for the vector derivative on a manifold
we need to be able to form the reciprocal of a list of basis vectors
So we use Exercise 5.26, VAGC page 75 to find the derivative of a vector function 
on a surface (manifold). We calculate the required reciprocal basis in two different ways;
1) using Problem 5.4.2 (and we also find the vector derivative)
2) using Problem 5.4.1 (and assume the same reciprocal basis will give the same derivative)
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ext:["wxm"]$
file_type_maxima:append(ext,file_type_maxima)$
batchload("initialize_fns")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be {e1,e2} i.e. Plen = 2
e.g. for four dimensions edit Pseudos:{e1,e2,e3}$ to Pseudos:{e1,e2,e3,e4}$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:{e1,e2,e3}$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
batchload("initialize_lsts")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
set derivabbrev:false$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
derivabbrev:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.26
VAGC page 75
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
parameterize a surface with vector b(old)x
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bx:u*{e1}+v*{e2}+(u*u+v*v)*{e3}$
ldisplay(bx)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the basis using bold vectors again
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bu:diff(bx,u)$
bv:diff(bx,v)$
ldisplay(bu,bv)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the basis is only orthogonal on the hyperbola u*v = 1/4
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bu&.bv;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the reciprocal of the basis using Problem 5.4.2
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
b2b1:bv&^bu$
abs2:normod(b2b1)^2$
bv&*b2b1/abs2$
b1:facsum(%,allblds)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
display(b2b1,abs2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
b1b2:bu&^bv$
abs2:normod(b1b2)^2$
bu&*b1b2/abs2$
b2:facsum(%,allblds)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
display(b1b2,abs2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ldisplay(b1,b2)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
check the inner products
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
b1&.bu;
b2&.bv;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
define a (bold) vector function on the surface
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bf:(v+1)*bu+u*u*bv$
ldisplay(bf)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form the vector derivative; "vector del" &* "vector f" = bivector + scalar
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
b1&*diff(bf,u)+b2&*diff(bf,v)$
delf:facsum(%,allblds)$
ldisplay(delf)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
in order to progress in forming a function for the vector derivative on a manifold
we need to be able to form the reciprocal of a list of basis vectors
for any dimension manifold in any dimension vector space
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
develop the code to form an expression for the outer product of a list of vectors
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lst2outer_code(lst):=block([len,n,bstr,bnstr,bout],
local(len,n,bstr,bnstr,bout),
if emptyp(lst) then return(1) else 
block(len:length(lst),
if is(equal(len,1)) then return(lst[1]) else
block(bstr:string(lst[1]),for n:2 thru len do 
block(bnstr:string(lst[n]),bstr:sconcat(bstr,"&^",bnstr)),
bout:parse_string(bstr))))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(bu,bv)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tgtbasis:[bu,bv];
vecout:lst2outer_code(tgtbasis);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
vout:lst2outer(tgtbasis);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Exercise 5.26
VAGC page 75
now using the method of Problem 5.4.1 as applied to a manifold
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bx:u*{e1}+v*{e2}+(u*u+v*v)*{e3}$
ldisplay(bx)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bu:diff(bx,u)$
bv:diff(bx,v)$
ldisplay(bu,bv)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
experiment with the reverse of an outer product to find its inverse
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bout:bu&^bv;
brev:mvrev(bout);
normod(bout)^2;
bout&*brev;
brev&*bout;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now make a noun expression for the outer product of the base vectors
without evaluation, even though bu and bv have already been evaluated
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
kill(tgtbasis)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tgtbasis:['bu,'bv];
bivout:lst2outer_code(tgtbasis);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
evaluate the outer product
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ev(bivout);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
we need the inverse of the (2D) basis on the Manifold somehow
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
reciprocM_code(cov):=block([mut,mutev,abs2,mrev,lenc,x,i,j,lst,bex,mv,mvev,nj,rec,con],
local(mut,mutev,abs2,mrev,lenc,x,i,j,lst,bex,mv,mvev,nj,rec,con),
mut:lst2outer(cov),
mutev:ev(mut),
abs2:normod(mutev)^2,
mrev:mvrev(mutev),
lenc:length(cov),
con:[],
for j:1 thru lenc do
block(lst:cov,
bex:cov[j],
lst:delete(bex,lst),
mv:lst2outer(lst),
mvev:ev(mv),
nj:(j-1),
rec:(-1)^nj*mvev&*mrev,
con:endcons(facsum(rec,allblds)/abs2,con)),con)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
comparison with other reciprocal functions in gafns5.wxm
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
veclst:lstblds[1];
reciproce(veclst);
reciprocb(veclst);
reciprocM_code(veclst);
reciprocM(veclst);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
display(tgtbasis)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
rectgt:reciprocM_code(tgtbasis);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
this code gives the same reciprocal basis as that of Problem 5.4.2
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
recb:[b1,b2]$
is(equal(recb[1],rectgt[1]));
is(equal(recb[2],rectgt[2]));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
check the inner products
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
recb[1]&.bu;
recb[2]&.bv;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
rectgt[1]&.bu;
rectgt[2]&.bv;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
display(bu,bv,tgtbasis);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the developed code was then copied to gcfns3.wxm as functions lst2outer() and reciprocM()
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
reciprocM(tgtbasis);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
