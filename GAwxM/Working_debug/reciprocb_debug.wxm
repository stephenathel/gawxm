/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 11.08.0 ] */

/* [wxMaxima: comment start ]
reciprocb_debug.wxm

GNU General Public License 2019  Stephen Athel Abbott.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
A test document for Geometric Algebra with wxMaxima

LAGA Problem 6.5.6 (Reciprocal bases) and the source for function reciprocb() in gafns5.wxm
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Reference book...Linear and Geometric Algebra (LAGA)
by Alan Macdonald
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ext:["wxm"]$
file_type_maxima:append(ext,file_type_maxima)$
batchload("initialize_fns")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the pseudoscalar and its inverse
the lowest useable dimension pseudoscalar should be {e1,e2} i.e. Plen = 2
e.g. for four dimensions edit Pseudos:{e1,e2,e3}$ to Pseudos:{e1,e2,e3,e4}$
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Pseudos:{e1,e2,e3}$
Pvar:listofvars(Pseudos)$
Plen:length(Pvar)$
I:Pseudos$
ni:(Plen-1)*Plen/2$
Ii:(-1)^ni*I$
kill(ni)$
ldisplay(Pvar)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
batchload("initialize_lsts")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
end of Initialization
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Problem 6.5.6 preamble (only part b of Problem 6.5.6 is treated below)
page 115
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
first make a vector
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
r:x*{e1}+y*{e2}+z*{e3};
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now confirm the coefficients in the Fourier expansion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
r&.{e1};
r&.{e2};
r&.{e3};
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
define the covariant basis as the orthonormal basis
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ecov:lstblds[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the reciprocal of the orthonormal basis as a list
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
econ:reciproce(ecov)$
econ;
econ[1];
econ[2];
econ[3];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
form the arbitrary basis vectors
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
u:u1*{e1}+u2*{e2}+u3*{e3};
v:v1*{e1}+v2*{e2}+v3*{e3};
w:w1*{e1}+w2*{e2}+w3*{e3};
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
define an arbitrary basis, bcov:[u,v,w] and use the multivector outer product function
to find the denominator as a multiple of the pseudoscalar of the orthonormal basis
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bcov:[u,v,w];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
u&^v&^w$
bld:facsum(%,allblds);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
find the (scalar) norm of the denominator to be used with the reciprocal function output
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
denext:extract(bld)$
ldisplay(denext)$
normden:denext[2]$
ldisplay(normden)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
this is the code under test and the source for function reciprocb() in gafns5.wxm
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
reciprocb_code(bcov):=block([x,i,j,lst,excl,bld,nj,bcon],
local(x,i,j,lst,excl,bld,nj,bcon),
lst:bcov,
if emptyp(lst) then return(1) else 
block(len:length(lst),
bcon:makelist(concat(x,i),i,1,len),
for j:1 thru len do
block(lst:bcov,
excl:bcov[j],
lst:delete(excl,lst),
bld:list2vecouter(lst),
nj:(j-1),
bcon[j]:(-1)^nj*bld&*Ii)),
bcon)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
the output from function reciprocb() should now be divided by normden but for
clarity this is not shown for the complete basis, however, the second vector in
the reciprocal basis list, for example, is given by bcon[2]/normden
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bcov:[u,v,w];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bcon:reciprocb_code(bcov)$
bcon[1]$
n1:facsum(%,allblds)$
bcon[2]$
n2:facsum(%,allblds)$
bcon[3]$
n3:facsum(%,allblds)$
ldisplay(n1,n2,n3)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Problem 6.5.6b (only)
page 115
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
represent the reciprocal basis with the list of contravariant vectors, [bs1,bs2,bs3] 
e.g. bs1 is "b superscript 1"
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
bs1:n1/normden$
bs2:n2/normden$
bs3:n3/normden$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
use the Fourier expansion coefficients, x, y, and z, used earlier to form the vector r;
then in order to form the rhs of Eq.(6.21), first find each scalar coefficient separately
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
r:x*{e1}+y*{e2}+z*{e3};
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
rs1:r&.bs1;
rs2:r&.bs2;
rs3:r&.bs3;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
now form the rhs of Equation (6.21), using the above calculated coefficients 
and the arbitrary, covariant (non-orthogonal) basis vectors, u, v and w
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
rhs:rs1*u+rs2*v+rs3*w$
ldisplay(rhs)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
this result is the same as the definition of r w.r.t. the orthonormal basis
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
lhs:r$
is(equal(lhs,rhs))$
ldisplay(r,%)$
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
